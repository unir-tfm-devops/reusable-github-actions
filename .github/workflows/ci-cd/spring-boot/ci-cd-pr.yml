on:
  workflow_call:
    inputs:
      java-version:
        description: "Java version to use"
        required: false
        default: "24"
        type: string
      maven-version:
        description: "Maven version to use"
        required: false
        default: "3.9.6"
        type: string
      run-unit-tests:
        description: "Whether to run unit tests"
        required: false
        default: true
        type: boolean
      run-integration-tests:
        description: "Whether to run integration and E2E tests"
        required: false
        default: true
        type: boolean
      run-helm-validation:
        description: "Whether to run Helm validation"
        required: false
        default: true
        type: boolean
      run-sonar-analysis:
        description: "Whether to run SonarQube analysis"
        required: false
        default: true
        type: boolean

jobs:
  revision:
    name: Revision
    runs-on: [ubuntu-latest]
    outputs:
      revision: ${{ steps.revision.outputs.revision }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: "true"
          fetch-depth: 0

      - name: Get revision
        id: revision
        env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          if [[ "$GITHUB_REF" == "refs/tags/"* ]]; then
            echo "revision=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          else
            REVISION=$(git describe --tags --always)
            echo "revision=$REVISION" >> $GITHUB_OUTPUT
          fi

  format:
    name: Format Check
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Maven & Java
        uses: unir-tfm-devops/reusable-github-actions/.github/actions/mvn-setup@main
        with:
          java-version: ${{ inputs.java-version }}
          maven-version: ${{ inputs.maven-version }}

      - name: Run Spotless Check
        run: mvn -B -ntp spotless:check

  test:
    name: Tests
    runs-on: [ubuntu-latest]
    needs: [revision, format]
    outputs:
      revision: ${{ needs.revision.outputs.revision }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Maven & Java
        uses: unir-tfm-devops/reusable-github-actions/.github/actions/mvn-setup@main
        with:
          java-version: ${{ inputs.java-version }}
          maven-version: ${{ inputs.maven-version }}

      - name: Run Unit Tests
        if: ${{ inputs.run-unit-tests }}
        run: mvn -B -ntp clean test -Drevision=${{ needs.revision.outputs.revision }}

      - name: Upload target directory
        if: ${{ inputs.run-unit-tests }}
        uses: actions/upload-artifact@v4
        with:
          name: maven-target
          path: target

      - name: Run Integration & E2E Tests
        if: ${{ inputs.run-integration-tests }}
        run: mvn -B -ntp failsafe:integration-test failsafe:verify -Drevision=${{ needs.revision.outputs.revision }}

      - name: Publish reports
        if: always() && (inputs.run-unit-tests || inputs.run-integration-tests)
        uses: unir-tfm-devops/reusable-github-actions/.github/actions/mvn-failsafe-surefire-report@main
        with:
          app-id: ${{ secrets.UNIR_TFM_APP_ID }}
          private-key: ${{ secrets.UNIR_TFM_APP_PRIVATE_KEY }}

  sonar:
    name: SonarQube Analysis
    runs-on: [ubuntu-latest]
    needs: [test]
    outputs:
      revision: ${{ needs.test.outputs.revision }}
    if: ${{ inputs.run-sonar-analysis }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download target directory
        uses: actions/download-artifact@v4
        with:
          name: maven-target
          path: target

      - name: SonarQubeScan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  helm:
    name: Helm Validation
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ inputs.run-helm-validation }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Helm Lint
        run: helm lint helm
