name: "Terraform Apply"

on:
  workflow_call:
    inputs:
      working_directory:
        description: "Working directory to use"
        required: false
        type: string
        default: "."

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Get Token From GitHub APP"
        id: get_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.UNIR_TFM_APP_ID }}
          private-key: ${{ secrets.UNIR_TFM_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: "Terraform Format Check"
        working-directory: ${{ inputs.working_directory }}
        run: terraform fmt -check

      - name: "Terraform Init"
        working-directory: ${{ inputs.working_directory }}
        run: terraform init -input=false

      - name: "Terraform Validate"
        working-directory: ${{ inputs.working_directory }}
        run: terraform validate

      - name: "Terraform Plan"
        working-directory: ${{ inputs.working_directory }}
        run: terraform plan -input=false
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}

      - name: "Terraform Apply"
        working-directory: ${{ inputs.working_directory }}
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
