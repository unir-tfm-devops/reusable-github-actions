on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        default: "20"
        type: string
      run-tests:
        description: "Whether to run tests"
        required: false
        default: true
        type: boolean
      run-helm-validation:
        description: "Whether to run Helm validation"
        required: false
        default: true
        type: boolean
      run-sonar-analysis:
        description: "Whether to run SonarQube analysis"
        required: false
        default: true
        type: boolean

jobs:
  revision:
    name: Revision
    runs-on: [ubuntu-latest]
    outputs:
      revision: ${{ steps.revision.outputs.revision }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: "true"
          fetch-depth: 0

      - name: Get revision
        id: revision
        env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          if [[ "$GITHUB_REF" == "refs/tags/"* ]]; then
            echo "revision=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          else
            REVISION=$(git describe --tags --always)
            echo "revision=$REVISION" >> $GITHUB_OUTPUT
          fi

  lint:
    name: Lint Check
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  test:
    name: Tests
    runs-on: [ubuntu-latest]
    needs: [revision, lint]
    outputs:
      revision: ${{ needs.revision.outputs.revision }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run Tests
        if: ${{ inputs.run-tests }}
        run: npm run test

      - name: Upload coverage reports
        if: ${{ inputs.run-tests }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage

  sonar:
    name: SonarQube Analysis
    runs-on: [ubuntu-latest]
    needs: [test]
    outputs:
      revision: ${{ needs.test.outputs.revision }}
    if: ${{ inputs.run-sonar-analysis }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download coverage reports
        if: ${{ inputs.run-tests }}
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports
          path: coverage

      - name: SonarQubeScan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  helm:
    name: Helm Validation
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ inputs.run-helm-validation }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Helm Lint
        run: helm lint helm
