name: 'Version Updater'
description: 'Update the version of the application in the workloads repository to deploy the service using ArgoCD'

inputs:
  version:
    description: 'Version to update in the workloads repository'
    required: true
  app-name:
    description: 'Name of the application to update'
    required: true
  environment:
    description: 'Environment where the application is deployed'
    required: false
    default: 'test'
  cloud:
    description: 'Cloud provider (aws or azure)'
    required: false
    default: 'aws'
  app-id:
    description: 'GitHub App ID'
    required: true
  private-key:
    description: 'GitHub App private key'
    required: true
  
runs: 
  using: composite

  steps:
    - name: Determine Repository Name
      id: repo_name
      shell: bash
      run: |
        if [ "${{ inputs.cloud }}" = "aws" ]; then
          echo "repository=eks-workloads" >> $GITHUB_OUTPUT
        else
          echo "repository=aks-workloads" >> $GITHUB_OUTPUT
        fi

    - name: Get Token From GitHub APP
      id: get_token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}
        owner: ${{ github.repository_owner }}

    - name: Checkout Workloads Repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/${{ steps.repo_name.outputs.repository }}
        token: ${{ steps.get_token.outputs.token }}
        path: ${{ steps.repo_name.outputs.repository }}

    - name: Update Chart.yaml Version
      shell: bash
      working-directory: ${{ steps.repo_name.outputs.repository }}
      run: |
        yq eval ".dependencies[0].version = \"${{ inputs.version }}\"" -i environments/${{ inputs.environment }}/applications/${{ inputs.app-name }}/Chart.yaml

    - name: Update values.yaml Version
      shell: bash
      working-directory: ${{ steps.repo_name.outputs.repository }}
      run: |
        yq eval ".${{ inputs.app-name }}.image.tag = \"${{ inputs.version }}\"" -i environments/${{ inputs.environment }}/applications/${{ inputs.app-name }}/values.yaml

    - name: Commit and Push Changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Update ${{ inputs.app-name }} to ${{ inputs.version }} in ${{ inputs.environment }} environment"
        branch: main
        repository: ${{ steps.repo_name.outputs.repository }}
        commit_user_name: "unir-tfm-devops[bot]"
        commit_user_email: "unir-tfm-devops[bot]@users.noreply.github.com"
        commit_author: "unir-tfm-devops[bot] <unir-tfm-devops[bot]@users.noreply.github.com>"